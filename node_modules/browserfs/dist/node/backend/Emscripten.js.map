{"version":3,"file":"Emscripten.js","sourceRoot":"","sources":["../../../src/backend/Emscripten.ts"],"names":[],"mappings":"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","sourcesContent":["import {SynchronousFileSystem, BFSOneArgCallback, BFSCallback, BFSThreeArgCallback, FileSystemOptions} from '../core/file_system';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport {FileFlag} from '../core/file_flag';\nimport {BaseFile, File} from '../core/file';\nimport {uint8Array2Buffer, buffer2Uint8array} from '../core/util';\nimport {ApiError, ErrorCode, ErrorStrings} from '../core/api_error';\nimport {EmscriptenFSNode} from '../generic/emscripten_fs';\n\n/**\n * @hidden\n */\ninterface EmscriptenError {\n  node: EmscriptenFSNode;\n  errno: number;\n}\n\n/**\n * @hidden\n */\nfunction convertError(e: EmscriptenError, path: string = ''): ApiError {\n  const errno = e.errno;\n  let parent = e.node;\n  const paths: string[] = [];\n  while (parent) {\n    paths.unshift(parent.name);\n    if (parent === parent.parent) {\n      break;\n    }\n    parent = parent.parent;\n  }\n  return new ApiError(errno, ErrorStrings[errno], paths.length > 0 ? '/' + paths.join('/') : path);\n}\n\nexport class EmscriptenFile extends BaseFile implements File {\n  constructor(\n    private _fs: EmscriptenFileSystem,\n    private _FS: any,\n    private _path: string,\n    private _stream: any) {\n    super();\n  }\n  public getPos(): number | undefined {\n    return undefined;\n  }\n  public close(cb: BFSOneArgCallback): void {\n    let err: ApiError | null = null;\n    try {\n      this.closeSync();\n    } catch (e) {\n      err = e;\n    } finally {\n      cb(err);\n    }\n  }\n  public closeSync(): void {\n    try {\n      this._FS.close(this._stream);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public stat(cb: BFSCallback<Stats>): void {\n    try {\n      cb(null, this.statSync());\n    } catch (e) {\n      cb(e);\n    }\n  }\n  public statSync(): Stats {\n    try {\n      return this._fs.statSync(this._path, false);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public truncate(len: number, cb: BFSOneArgCallback): void {\n    let err: ApiError | null = null;\n    try {\n      this.truncateSync(len);\n    } catch (e) {\n      err = e;\n    } finally {\n      cb(err);\n    }\n  }\n  public truncateSync(len: number): void {\n    try {\n      this._FS.ftruncate(this._stream.fd, len);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public write(buffer: NodeBuffer, offset: number, length: number, position: number, cb: BFSThreeArgCallback<number, Buffer>): void {\n    try {\n      cb(null, this.writeSync(buffer, offset, length, position), buffer);\n    } catch (e) {\n      cb(e);\n    }\n  }\n  public writeSync(buffer: NodeBuffer, offset: number, length: number, position: number | null): number {\n    try {\n      const u8 = buffer2Uint8array(buffer);\n      // Emscripten is particular about what position is set to.\n      const emPosition = position === null ? undefined : position;\n      return this._FS.write(this._stream, u8, offset, length, emPosition);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public read(buffer: NodeBuffer, offset: number, length: number, position: number, cb: BFSThreeArgCallback<number, Buffer>): void {\n    try {\n      cb(null, this.readSync(buffer, offset, length, position), buffer);\n    } catch (e) {\n      cb(e);\n    }\n  }\n  public readSync(buffer: NodeBuffer, offset: number, length: number, position: number | null): number {\n    try {\n      const u8 = buffer2Uint8array(buffer);\n      // Emscripten is particular about what position is set to.\n      const emPosition = position === null ? undefined : position;\n      return this._FS.read(this._stream, u8, offset, length, emPosition);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public sync(cb: BFSOneArgCallback): void {\n    // NOP.\n    cb();\n  }\n  public syncSync(): void {\n    // NOP.\n  }\n  public chown(uid: number, gid: number, cb: BFSOneArgCallback): void {\n    let err: ApiError | null = null;\n    try {\n      this.chownSync(uid, gid);\n    } catch (e) {\n      err = e;\n    } finally {\n      cb(err);\n    }\n  }\n  public chownSync(uid: number, gid: number): void {\n    try {\n      this._FS.fchown(this._stream.fd, uid, gid);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public chmod(mode: number, cb: BFSOneArgCallback): void {\n    let err: ApiError | null = null;\n    try {\n      this.chmodSync(mode);\n    } catch (e) {\n      err = e;\n    } finally {\n      cb(err);\n    }\n  }\n  public chmodSync(mode: number): void {\n    try {\n      this._FS.fchmod(this._stream.fd, mode);\n    } catch (e) {\n      throw convertError(e, this._path);\n    }\n  }\n  public utimes(atime: Date, mtime: Date, cb: BFSOneArgCallback): void {\n    let err: ApiError | null = null;\n    try {\n      this.utimesSync(atime, mtime);\n    } catch (e) {\n      err = e;\n    } finally {\n      cb(err);\n    }\n  }\n  public utimesSync(atime: Date, mtime: Date): void {\n    this._fs.utimesSync(this._path, atime, mtime);\n  }\n}\n\n/**\n * Configuration options for Emscripten file systems.\n */\nexport interface EmscriptenFileSystemOptions {\n  // The Emscripten file system to use (`FS`)\n  FS: any;\n}\n\n/**\n * Mounts an Emscripten file system into the BrowserFS file system.\n */\nexport default class EmscriptenFileSystem extends SynchronousFileSystem {\n  public static readonly Name = \"EmscriptenFileSystem\";\n\n  public static readonly Options: FileSystemOptions = {\n    FS: {\n      type: \"object\",\n      description: \"The Emscripten file system to use (the `FS` variable)\"\n    }\n  };\n\n  /**\n   * Create an EmscriptenFileSystem instance with the given options.\n   */\n  public static Create(opts: EmscriptenFileSystemOptions, cb: BFSCallback<EmscriptenFileSystem>): void {\n    cb(null, new EmscriptenFileSystem(opts.FS));\n  }\n  public static isAvailable(): boolean { return true; }\n\n  private _FS: any;\n\n  /**\n   * Creates a BrowserFS file system for the given Emscripten file system.\n   * @param _FS The Emscripten file system (`FS`).\n   */\n  constructor(_FS: any) {\n    super();\n    this._FS = _FS;\n  }\n  public getName(): string { return this._FS.DB_NAME(); }\n  public isReadOnly(): boolean { return false; }\n  public supportsLinks(): boolean { return true; }\n  public supportsProps(): boolean { return true; }\n  public supportsSynch(): boolean { return true; }\n\n  public renameSync(oldPath: string, newPath: string): void {\n    try {\n      this._FS.rename(oldPath, newPath);\n    } catch (e) {\n      if (e.errno === ErrorCode.ENOENT) {\n        throw convertError(e, this.existsSync(oldPath) ? newPath : oldPath);\n      } else {\n        throw convertError(e);\n      }\n    }\n  }\n\n  public statSync(p: string, isLstat: boolean): Stats {\n    try {\n      const stats = isLstat ? this._FS.lstat(p) : this._FS.stat(p);\n      const itemType = this.modeToFileType(stats.mode);\n      return new Stats(\n        itemType,\n        stats.size,\n        stats.mode,\n        stats.atime,\n        stats.mtime,\n        stats.ctime\n      );\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public openSync(p: string, flag: FileFlag, mode: number): EmscriptenFile {\n    try {\n      const stream = this._FS.open(p, flag.getFlagString(), mode);\n      if (this._FS.isDir(stream.node.mode)) {\n        this._FS.close(stream);\n        throw ApiError.EISDIR(p);\n      }\n      return new EmscriptenFile(this, this._FS, p, stream);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public unlinkSync(p: string): void {\n    try {\n      this._FS.unlink(p);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public rmdirSync(p: string): void {\n    try {\n      this._FS.rmdir(p);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public mkdirSync(p: string, mode: number): void {\n    try {\n      this._FS.mkdir(p, mode);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public readdirSync(p: string): string[] {\n    try {\n      // Emscripten returns items for '.' and '..'. Node does not.\n      return this._FS.readdir(p).filter((p: string) => p !== '.' && p !== '..');\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public truncateSync(p: string, len: number): void {\n    try {\n      this._FS.truncate(p, len);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public readFileSync(p: string, encoding: string, flag: FileFlag): any {\n    try {\n      const data: Uint8Array = this._FS.readFile(p, { flags: flag.getFlagString() });\n      const buff = uint8Array2Buffer(data);\n      if (encoding) {\n        return buff.toString(encoding);\n      } else {\n        return buff;\n      }\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public writeFileSync(p: string, data: any, encoding: string, flag: FileFlag, mode: number): void {\n    try {\n      if (encoding) {\n        data = Buffer.from(data, encoding);\n      }\n      const u8 = buffer2Uint8array(data);\n      this._FS.writeFile(p, u8, { flags: flag.getFlagString(), encoding: 'binary' });\n      this._FS.chmod(p, mode);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public chmodSync(p: string, isLchmod: boolean, mode: number) {\n    try {\n      isLchmod ? this._FS.lchmod(p, mode) : this._FS.chmod(p, mode);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public chownSync(p: string, isLchown: boolean, uid: number, gid: number): void {\n    try {\n      isLchown ? this._FS.lchown(p, uid, gid) : this._FS.chown(p, uid, gid);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public symlinkSync(srcpath: string, dstpath: string, type: string): void {\n    try {\n      this._FS.symlink(srcpath, dstpath);\n    } catch (e) {\n      throw convertError(e);\n    }\n  }\n\n  public readlinkSync(p: string): string {\n    try {\n      return this._FS.readlink(p);\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  public utimesSync(p: string, atime: Date, mtime: Date): void {\n    try {\n      this._FS.utime(p, atime.getTime(), mtime.getTime());\n    } catch (e) {\n      throw convertError(e, p);\n    }\n  }\n\n  private modeToFileType(mode: number): FileType {\n    if (this._FS.isDir(mode)) {\n      return FileType.DIRECTORY;\n    } else if (this._FS.isFile(mode)) {\n      return FileType.FILE;\n    } else if (this._FS.isLink(mode)) {\n      return FileType.SYMLINK;\n    } else {\n      throw ApiError.EPERM(`Invalid mode: ${mode}`);\n    }\n  }\n\n}\n"]}