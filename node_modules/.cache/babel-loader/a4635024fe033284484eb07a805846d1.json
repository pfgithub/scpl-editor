{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ActionIcon = _interopRequireDefault(require(\"../ActionIcon\"));\n\nvar _Field = _interopRequireDefault(require(\"./Field\"));\n\nvar _Select = _interopRequireDefault(require(\"./Select\"));\n\nvar _AppField = _interopRequireDefault(require(\"./AppField\"));\n\nvar _Token = _interopRequireDefault(require(\"./Token\"));\n\nvar _utils = require(\"../utils\");\n\nvar _stylesModule = _interopRequireDefault(require(\"./styles.module.scss\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar variableIndex = 0;\nvar previousOutputUUID = '';\nvar magicVariables = {};\n\nvar ActionBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActionBlock, _React$Component);\n\n  function ActionBlock(props) {\n    var _this;\n\n    _classCallCheck(this, ActionBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionBlock).call(this, props)); // TODO: handle Filter Files (and all the \".filter\" actions) parameters\n    // if (data.Name === 'Filter Files') console.log(value);\n\n    _defineProperty(_assertThisInitialized(_this), \"getVariable\", function (attachment) {\n      var aggrandizement = attachment.Aggrandizements && attachment.Aggrandizements.map(function (aggr) {\n        switch (aggr.Type) {\n          case 'WFDictionaryValueVariableAggrandizement':\n            return aggr.DictionaryKey;\n\n          case 'WFPropertyVariableAggrandizement':\n            return aggr.PropertyName;\n\n          default:\n            return;\n        }\n      }).filter(Boolean)[0];\n\n      switch (attachment.Type) {\n        case 'ActionOutput':\n          var variable = magicVariables[attachment.OutputUUID];\n          return variable ? _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              name: variable.name,\n              icon: variable.icon,\n              aggrandizement: aggrandizement\n            }\n          }) : null;\n\n        case 'Variable':\n          return _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              name: attachment.VariableName,\n              aggrandizement: aggrandizement\n            }\n          });\n\n        case 'Clipboard':\n          return _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              global: true,\n              name: 'Clipboard',\n              icon: 'Clipboard',\n              aggrandizement: aggrandizement\n            }\n          });\n\n        case 'CurrentDate':\n          return _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              global: true,\n              name: 'Current Date',\n              icon: 'Date',\n              aggrandizement: aggrandizement\n            }\n          });\n\n        case 'Ask':\n          return _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              global: true,\n              name: 'Ask When Run',\n              aggrandizement: aggrandizement\n            }\n          });\n\n        case 'Input':\n          return _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              global: true,\n              name: 'Input',\n              aggrandizement: aggrandizement\n            }\n          });\n\n        case 'ExtensionInput':\n          return _react.default.createElement(_Token.default, {\n            key: \"variable-\".concat(variableIndex++),\n            data: {\n              global: true,\n              name: 'Extension Input',\n              icon: 'ShortcutExtension',\n              aggrandizement: aggrandizement\n            }\n          });\n\n        default:\n          console.error(\"[ERROR: Variable] Unknown Type \\\"\".concat(attachment.Type, \"\\\"\"));\n          return null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getParameterInput\", function (Param, value) {\n      var _classList, _classList3;\n\n      if (value && value.WFSerializationType) {\n        switch (value.WFSerializationType) {\n          case 'WFTextTokenAttachment':\n          case 'WFTextTokenString':\n            break;\n\n          default:\n            console.error(\"[ERROR: Parameter] Unknown Value.WFSerializationType \\\"\".concat(value.WFSerializationType, \"\\\"\"));\n        }\n      } // \"Create Folder\", \"Get/Save File\" actions, \"File/Destination Path\" parameters\n      // - add '/Shortcuts/' starting folder before the file path\n\n\n      if (['WFFilePath', 'WFGetFilePath', 'WFFileDestinationPath'].includes(Param.Key)) {\n        return _react.default.createElement(_Field.default, {\n          data: Param,\n          value: [_react.default.createElement(\"span\", {\n            key: \"getFileInitialPath\",\n            className: _stylesModule.default.getFileInitialPath\n          }, \"/Shortcuts/\"), (value || {}).WFSerializationType ? _this.parseWFValue(value) : value]\n        });\n      }\n\n      switch (Param.Class) {\n        case 'WFEnumerationParameter':\n          if (value.WFSerializationType) value = _this.parseWFValue(value);\n          return _react.default.createElement(_Select.default, {\n            values: Param.Items,\n            value: value\n          });\n\n        case 'WFSwitchParameter':\n          return _react.default.createElement(\"span\", {\n            className: (0, _utils.classList)((_classList = {}, _defineProperty(_classList, _stylesModule.default.switch, true), _defineProperty(_classList, _stylesModule.default.checked, value), _classList))\n          }, _react.default.createElement(\"small\", null));\n\n        case 'WFTextInputParameter':\n        case 'WFNumberFieldParameter':\n          return _react.default.createElement(_Field.default, {\n            data: Param,\n            value: (value || {}).WFSerializationType ? _this.parseWFValue(value) : value,\n            className: (0, _utils.classList)(_defineProperty({}, _stylesModule.default.expanded, _this.props.metadata.expanded))\n          });\n\n        case 'WFVariablePickerParameter':\n        case 'WFWorkflowPickerParameter':\n        case 'WFArchiveFormatParameter':\n        case 'WFDateFieldParameter':\n          return _react.default.createElement(_Field.default, {\n            data: _objectSpread({}, Param, {\n              TextAlignment: 'Right'\n            }),\n            value: (value || {}).WFSerializationType ? _this.parseWFValue(value) : value\n          });\n\n        case 'WFAppPickerParameter':\n          var apps = new Map([['is.workflow.my.app', 'Shortcuts']]);\n          return _react.default.createElement(_Field.default, {\n            data: _objectSpread({}, Param, {\n              TextAlignment: 'Right'\n            }),\n            value: apps.get(value) || value\n          });\n\n        case 'WFVariableFieldParameter':\n          return _react.default.createElement(_Field.default, {\n            data: Param,\n            value: value,\n            className: _stylesModule.default.variable\n          });\n\n        case 'WFStorageServicePickerParameter':\n          return _react.default.createElement(_AppField.default, {\n            value: value\n          });\n\n        case 'WFExpandingParameter':\n          return _react.default.createElement(\"svg\", {\n            viewBox: \"0 0 448 512\",\n            className: (0, _utils.classList)((_classList3 = {}, _defineProperty(_classList3, _stylesModule.default.chevron, true), _defineProperty(_classList3, _stylesModule.default.expanded, value), _classList3))\n          }, _react.default.createElement(\"path\", {\n            d: \" M6.101 359.293L25.9 379.092c4.686 4.686 12.284 4.686 16.971 0L224 198.393l181.13 180.698c4.686 4.686 12.284 4.686 16.971 0l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L232.485 132.908c-4.686-4.686-12.284-4.686-16.971 0L6.101 342.322c-4.687 4.687-4.687 12.285 0 16.971z\"\n          }));\n\n        default:\n          console.error(\"[ERROR: Parameter] Unknown Class \\\"\".concat(Param.Class, \"\\\"\"));\n          return _react.default.createElement(_Field.default, {\n            data: Param,\n            value: \"This field hasn't yet been implemented\",\n            className: _stylesModule.default.notImplemented\n          });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"parseWFValue\", function (_ref) {\n      var Value = _ref.Value,\n          WFSerializationType = _ref.WFSerializationType;\n      var RC = \"\\uFFFC\"; // replacement character\n\n      switch (WFSerializationType) {\n        case 'WFTextTokenString':\n          var text = Value.string;\n          var tokens = [];\n          Object.entries(Value.attachmentsByRange).forEach(function (_ref2) {\n            var _ref3 = _slicedToArray(_ref2, 2),\n                position = _ref3[0],\n                value = _ref3[1];\n\n            var index = Number(position.match(/\\d+/)[0]);\n            var attachment = value;\n\n            switch (attachment.Type) {\n              case 'ActionOutput':\n              case 'Ask':\n              case 'Clipboard':\n              case 'CurrentDate':\n              case 'ExtensionInput':\n              case 'Input':\n              case 'Variable':\n                tokens[index] = _this.getVariable(attachment);\n                break;\n\n              default:\n                console.error(\"[ERROR: Attachment] Unknown Type \\\"\".concat(attachment.Type, \"\\\"\"));\n            }\n          });\n          tokens = tokens.filter(Boolean);\n          return text.split(RC).reduce(function (previous, current) {\n            previous = Array.isArray(previous) ? previous : [previous];\n            return [].concat(_toConsumableArray(previous), [tokens.shift(), current]);\n          });\n\n        case 'WFTextTokenAttachment':\n          return _this.getVariable(Value);\n\n        case 'WFArrayParameterState':\n          var arrayLength = Value.length;\n          return arrayLength === 1 ? '1 item' : \"\".concat(arrayLength, \" items\");\n\n        case 'WFDictionaryFieldValue':\n          var dictLength = Value.Value.WFDictionaryFieldValueItems.length;\n          return dictLength === 1 ? '1 item' : \"\".concat(dictLength, \" items\");\n\n        case 'WFNumberSubstitutableState':\n          return Value.WFSerializationType ? _this.parseWFValue(Value) : \"\".concat(Boolean(Value));\n\n        default:\n          console.error(\"[ERROR: Parameter] Unknown Value.WFSerializationType \\\"\".concat(WFSerializationType, \"\\\"\"));\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ActionBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _classList4,\n          _classList5,\n          _classList8,\n          _classList9,\n          _this2 = this;\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          data = _this$props.data,\n          icon = _this$props.icon,\n          missing = _this$props.missing,\n          indentation = _this$props.indentation,\n          metadata = _this$props.metadata,\n          fullValue = _this$props.fullValue;\n      var UUID = value.UUID,\n          CustomOutputName = value.CustomOutputName;\n\n      if (UUID) {\n        var OutputName = data.Output && data.Output.OutputName; // Missing OutputNames\n\n        if (data.Name === 'If') OutputName = 'If Result';\n        if (data.Name === 'Choose from Menu') OutputName = 'Menu Result';\n        if (data.Name === 'Filter Files') OutputName = 'Files';\n        if (data.Name === 'Get Details of Images') OutputName = 'Details of Images';\n        if (data.Name === 'Find Music') OutputName = 'Music';\n        if (data.Name === 'Find Reminders') OutputName = 'Reminders';\n        if (data.Name === 'Find Photos') OutputName = 'Photos';\n        if (data.Name === 'Find Contacts') OutputName = 'Contacts';\n        magicVariables[UUID] = {\n          name: CustomOutputName || OutputName || console.error(\"[ERROR: OutputName] Unknown OutputName for \\\"\".concat(data.Name, \"\\\" action\")) || 'UNKNOWN',\n          icon: icon || 'Placeholder'\n        };\n        previousOutputUUID = UUID;\n      }\n\n      var parameters = data && data.Parameters && data.Parameters.reduce(function (result, _ref4) {\n        var Key = _ref4.Key,\n            DefaultValue = _ref4.DefaultValue;\n        var currentValue = value[Key];\n        result[Key] = currentValue !== undefined ? currentValue : DefaultValue !== undefined ? DefaultValue : '';\n        return result;\n      }, {}) || {};\n      var hasInput = data && data.Input || // TODO: check over the parameters directly\n      JSON.stringify(parameters).includes(\"\\\"OutputUUID\\\":\\\"\".concat(previousOutputUUID, \"\\\"\"));\n      if (missing) return _react.default.createElement(\"div\", {\n        className: (0, _utils.classList)((_classList4 = {}, _defineProperty(_classList4, _stylesModule.default.actionBlockWrapper, true), _defineProperty(_classList4, _stylesModule.default.input, hasInput), _classList4)),\n        style: {\n          '--indent': indentation\n        }\n      }, _react.default.createElement(\"div\", {\n        className: (0, _utils.classList)((_classList5 = {}, _defineProperty(_classList5, _stylesModule.default.actionBlock, true), _defineProperty(_classList5, _stylesModule.default.missing, true), _defineProperty(_classList5, _stylesModule.default.safari, metadata.safari), _classList5))\n      }, _react.default.createElement(\"div\", {\n        className: _stylesModule.default.header\n      }, _react.default.createElement(_ActionIcon.default, {\n        name: icon,\n        className: _stylesModule.default.icon\n      }), _react.default.createElement(\"span\", {\n        className: _stylesModule.default.title\n      }, \"[\", missing, \"]\")), _react.default.createElement(\"div\", {\n        className: _stylesModule.default.item\n      }, _react.default.createElement(\"label\", null, \"Unkown action identifier\"), _react.default.createElement(_Field.default, {\n        data: {\n          Placeholder: missing\n        },\n        value: missing\n      }))));\n\n      if (value.GroupingIdentifier && value.WFControlFlowMode) {\n        var _classList6, _classList7;\n\n        var _name;\n\n        switch (value.WFControlFlowMode) {\n          case 0:\n            break;\n\n          case 1:\n            _name = data.Name === 'Choose from Menu' ? value.WFMenuItemTitle || '' : 'Otherwise';\n            break;\n\n          case 2:\n            _name = \"End \".concat(data.Name === 'Choose from Menu' ? 'Menu' : ['Repeat', 'Repeat with Each'].includes(data.Name) ? 'Repeat' : data.Name);\n            break;\n\n          default:\n            throw new Error(\"Invalid control flow mode \".concat(value.controlFlowMode));\n        }\n\n        return _react.default.createElement(\"div\", {\n          className: (0, _utils.classList)((_classList6 = {}, _defineProperty(_classList6, _stylesModule.default.actionBlockWrapper, true), _defineProperty(_classList6, _stylesModule.default.input, hasInput), _classList6)),\n          style: {\n            '--indent': indentation\n          }\n        }, _react.default.createElement(\"div\", {\n          className: (0, _utils.classList)((_classList7 = {}, _defineProperty(_classList7, _stylesModule.default.actionBlock, true), _defineProperty(_classList7, _stylesModule.default.noIcon, true), _defineProperty(_classList7, _stylesModule.default.safari, metadata.safari), _classList7))\n        }, _react.default.createElement(\"div\", {\n          className: _stylesModule.default.header\n        }, _react.default.createElement(\"span\", {\n          className: _stylesModule.default.title\n        }, _name || data.Name))));\n      }\n\n      return _react.default.createElement(\"div\", {\n        className: (0, _utils.classList)((_classList8 = {}, _defineProperty(_classList8, _stylesModule.default.actionBlockWrapper, true), _defineProperty(_classList8, _stylesModule.default.input, hasInput), _classList8)),\n        style: {\n          '--indent': indentation\n        }\n      }, _react.default.createElement(\"div\", {\n        className: (0, _utils.classList)((_classList9 = {}, _defineProperty(_classList9, _stylesModule.default.actionBlock, true), _defineProperty(_classList9, _stylesModule.default.comment, data.Name === 'Comment'), _defineProperty(_classList9, _stylesModule.default.safari, metadata.safari), _classList9))\n      }, _react.default.createElement(\"div\", {\n        className: _stylesModule.default.header\n      }, _react.default.createElement(_ActionIcon.default, {\n        name: icon,\n        className: _stylesModule.default.icon\n      }), _react.default.createElement(\"span\", {\n        className: _stylesModule.default.title\n      }, name || data.Name), this.props.onInteract && _react.default.createElement(\"span\", {\n        className: _stylesModule.default.log,\n        onClick: function onClick() {\n          if (!_this2.props.onInteract) {\n            return;\n          }\n\n          _this2.props.onInteract({\n            type: 'action',\n            actionData: fullValue\n          });\n        }\n      }, \"Jump\"), metadata.debug && _react.default.createElement(\"span\", {\n        className: _stylesModule.default.log,\n        onClick: function onClick() {\n          return console.log({\n            action: name || data.Name,\n            parameters: parameters,\n            value: value\n          });\n        }\n      }, \"LOG\")), data.Parameters && data.Parameters.map(function (Param, i) {\n        var _classList11;\n\n        if (Param.Hidden) return null;\n        if (Param.RequiredResources && Param.RequiredResources.map(function (_ref5) {\n          var WFResourceClass = _ref5.WFResourceClass,\n              WFParameterKey = _ref5.WFParameterKey,\n              _ref5$WFParameterRela = _ref5.WFParameterRelation,\n              WFParameterRelation = _ref5$WFParameterRela === void 0 ? '==' : _ref5$WFParameterRela,\n              WFParameterValue = _ref5.WFParameterValue,\n              WFParameterValues = _ref5.WFParameterValues,\n              WFWorkflowType = _ref5.WFWorkflowType;\n\n          switch (WFResourceClass) {\n            case 'WFParameterRelationResource':\n              var relation;\n\n              switch (WFParameterRelation) {\n                case '==':\n                  relation = function relation(parameterValue) {\n                    return parameters[WFParameterKey] === parameterValue;\n                  };\n\n                  break;\n\n                case '!=':\n                  relation = function relation(parameterValue) {\n                    return parameters[WFParameterKey] !== parameterValue;\n                  };\n\n                  break;\n\n                default:\n                  console.error(\"[ERROR: Parameter] Unknown RequiredResources.WFParameterRelation \\\"\".concat(WFParameterRelation, \"\\\"\"));\n                  return null;\n              }\n\n              if (WFParameterValues) {\n                return WFParameterValues.map(relation)[WFParameterRelation === '==' ? 'some' : 'every'](Boolean);\n              }\n\n              return relation(WFParameterValue);\n\n            case 'WFWorkflowTypeResource':\n              switch (WFWorkflowType) {\n                case 'WatchKit':\n                  return false;\n\n                default:\n                  console.error(\"[ERROR: Parameter] Unknown RequiredResources.WFWorkflowType \\\"\".concat(WFWorkflowType, \"\\\"\"));\n                  return null;\n              }\n\n            case 'WFDeviceAttributesResource':\n              return true;\n\n            default:\n              console.error(\"[ERROR: Parameter] Unknown RequiredResources.WFResourceClass \\\"\".concat(WFResourceClass, \"\\\"\"));\n              return null;\n          }\n        }).includes(false)) return null; // \"Get File\" action doesn't have \"Initial Path\" parameter anymore\n\n        if (data.Name === 'Get File') {\n          if (Param.Key === 'WFGetFileInitialDirectoryPath') return null;\n        }\n\n        switch (Param.Class) {\n          case 'WFContentArrayParameter':\n          case 'WFArrayParameter':\n            return parameters[Param.Key].map(function (WFItem, i) {\n              var value = typeof WFItem === 'string' ? WFItem : _this2.parseWFValue(WFItem.WFValue);\n              return _react.default.createElement(\"div\", {\n                className: _stylesModule.default.item,\n                key: i\n              }, _react.default.createElement(_Field.default, {\n                data: {\n                  Placeholder: 'Text'\n                },\n                value: value\n              }));\n            });\n\n          case 'WFDictionaryParameter':\n            return parameters[Param.Key].Value && parameters[Param.Key].Value.WFDictionaryFieldValueItems.map(function (WFItem, i) {\n              var _classList10;\n\n              var key = typeof WFItem.WFKey === 'string' ? WFItem.WFKey : _this2.parseWFValue(WFItem.WFKey);\n              var value = typeof WFItem.WFValue === 'string' ? WFItem.WFValue : _this2.parseWFValue(WFItem.WFValue);\n              return _react.default.createElement(\"div\", {\n                className: (0, _utils.classList)((_classList10 = {}, _defineProperty(_classList10, _stylesModule.default.item, true), _defineProperty(_classList10, _stylesModule.default.dictionary, true), _classList10)),\n                key: i\n              }, _react.default.createElement(_Field.default, {\n                data: {\n                  Placeholder: 'Key'\n                },\n                value: key\n              }), _react.default.createElement(_Field.default, {\n                data: {\n                  Placeholder: 'Text'\n                },\n                value: value\n              }));\n            });\n\n          case 'WFStepperParameter':\n            var StepperDescription = Param.StepperDescription,\n                StepperPrefix = Param.StepperPrefix,\n                StepperNoun = Param.StepperNoun,\n                StepperPluralNoun = Param.StepperPluralNoun;\n            var count = parameters[Param.Key];\n            return _react.default.createElement(\"div\", {\n              className: (0, _utils.classList)((_classList11 = {}, _defineProperty(_classList11, _stylesModule.default.item, true), _defineProperty(_classList11, _stylesModule.default.stepper, true), _classList11)),\n              key: i\n            }, count && count.WFSerializationType ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"label\", null, StepperDescription), _react.default.createElement(_Field.default, {\n              data: {\n                TextAlignment: 'Right'\n              },\n              value: _this2.parseWFValue(count)\n            })) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"label\", null, StepperPrefix, \" \".concat(count, \" \").concat(count === 1 ? StepperNoun : StepperPluralNoun)), _react.default.createElement(_Select.default, {\n              values: ['-', '+'],\n              value: \"\"\n            })));\n\n          default:\n            return _react.default.createElement(\"div\", {\n              className: _stylesModule.default.item,\n              key: i\n            }, Param.Label && !Param.Multiline && Param.Class !== 'WFContentArrayParameter' && _react.default.createElement(\"label\", null, Param.Label), _this2.getParameterInput(Param, parameters[Param.Key]));\n        }\n      })));\n    }\n  }]);\n\n  return ActionBlock;\n}(_react.default.Component);\n\nexports.default = ActionBlock;","map":null,"metadata":{},"sourceType":"script"}