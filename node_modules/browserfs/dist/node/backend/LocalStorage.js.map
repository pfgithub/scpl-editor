{"version":3,"file":"LocalStorage.js","sourceRoot":"","sources":["../../../src/backend/LocalStorage.ts"],"names":[],"mappings":"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","sourcesContent":["import {BFSCallback, FileSystemOptions} from '../core/file_system';\nimport {SyncKeyValueStore, SimpleSyncStore, SyncKeyValueFileSystem, SimpleSyncRWTransaction, SyncKeyValueRWTransaction} from '../generic/key_value_filesystem';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport global from '../core/global';\n\n/**\n * Some versions of FF and all versions of IE do not support the full range of\n * 16-bit numbers encoded as characters, as they enforce UTF-16 restrictions.\n * @url http://stackoverflow.com/questions/11170716/are-there-any-characters-that-are-not-allowed-in-localstorage/11173673#11173673\n * @hidden\n */\nlet supportsBinaryString: boolean = false,\n  binaryEncoding: string;\ntry {\n  global.localStorage.setItem(\"__test__\", String.fromCharCode(0xD800));\n  supportsBinaryString = global.localStorage.getItem(\"__test__\") === String.fromCharCode(0xD800);\n} catch (e) {\n  // IE throws an exception.\n  supportsBinaryString = false;\n}\nbinaryEncoding = supportsBinaryString ? 'binary_string' : 'binary_string_ie';\nif (!Buffer.isEncoding(binaryEncoding)) {\n  // Fallback for non BrowserFS implementations of buffer that lack a\n  // binary_string format.\n  binaryEncoding = \"base64\";\n}\n\n/**\n * A synchronous key-value store backed by localStorage.\n */\nexport class LocalStorageStore implements SyncKeyValueStore, SimpleSyncStore {\n  public name(): string {\n    return LocalStorageFileSystem.Name;\n  }\n\n  public clear(): void {\n    global.localStorage.clear();\n  }\n\n  public beginTransaction(type: string): SyncKeyValueRWTransaction {\n    // No need to differentiate.\n    return new SimpleSyncRWTransaction(this);\n  }\n\n  public get(key: string): Buffer | undefined {\n    try {\n      const data = global.localStorage.getItem(key);\n      if (data !== null) {\n        return Buffer.from(data, binaryEncoding);\n      }\n    } catch (e) {\n      // Do nothing.\n    }\n    // Key doesn't exist, or a failure occurred.\n    return undefined;\n  }\n\n  public put(key: string, data: Buffer, overwrite: boolean): boolean {\n    try {\n      if (!overwrite && global.localStorage.getItem(key) !== null) {\n        // Don't want to overwrite the key!\n        return false;\n      }\n      global.localStorage.setItem(key, data.toString(binaryEncoding));\n      return true;\n    } catch (e) {\n      throw new ApiError(ErrorCode.ENOSPC, \"LocalStorage is full.\");\n    }\n  }\n\n  public del(key: string): void {\n    try {\n      global.localStorage.removeItem(key);\n    } catch (e) {\n      throw new ApiError(ErrorCode.EIO, \"Unable to delete key \" + key + \": \" + e);\n    }\n  }\n}\n\n/**\n * A synchronous file system backed by localStorage. Connects our\n * LocalStorageStore to our SyncKeyValueFileSystem.\n */\nexport default class LocalStorageFileSystem extends SyncKeyValueFileSystem {\n  public static readonly Name = \"LocalStorage\";\n\n  public static readonly Options: FileSystemOptions = {};\n\n  /**\n   * Creates a LocalStorageFileSystem instance.\n   */\n  public static Create(options: any, cb: BFSCallback<LocalStorageFileSystem>): void {\n    cb(null, new LocalStorageFileSystem());\n  }\n  public static isAvailable(): boolean {\n    return typeof global.localStorage !== 'undefined';\n  }\n  /**\n   * Creates a new LocalStorage file system using the contents of `localStorage`.\n   */\n  constructor() { super({ store: new LocalStorageStore() }); }\n}\n"]}