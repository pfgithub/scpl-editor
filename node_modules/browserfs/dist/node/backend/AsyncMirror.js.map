{"version":3,"file":"AsyncMirror.js","sourceRoot":"","sources":["../../../src/backend/AsyncMirror.ts"],"names":[],"mappings":"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","sourcesContent":["import {FileSystem, SynchronousFileSystem, BFSOneArgCallback, BFSCallback, FileSystemOptions} from '../core/file_system';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {FileFlag} from '../core/file_flag';\nimport {File} from '../core/file';\nimport Stats from '../core/node_fs_stats';\nimport PreloadFile from '../generic/preload_file';\nimport {deprecationMessage} from '../core/util';\nimport * as path from 'path';\n\n/**\n * @hidden\n */\ninterface IAsyncOperation {\n  apiMethod: string;\n  arguments: any[];\n}\n\n/**\n * We define our own file to interpose on syncSync() for mirroring purposes.\n */\nclass MirrorFile extends PreloadFile<AsyncMirror> implements File {\n  constructor(fs: AsyncMirror, path: string, flag: FileFlag, stat: Stats, data: Buffer) {\n    super(fs, path, flag, stat, data);\n  }\n\n  public syncSync(): void {\n    if (this.isDirty()) {\n      this._fs._syncSync(this);\n      this.resetDirty();\n    }\n  }\n\n  public closeSync(): void {\n    this.syncSync();\n  }\n}\n\n/**\n * Configuration options for the AsyncMirror file system.\n */\nexport interface AsyncMirrorOptions {\n  // The synchronous file system to mirror the asynchronous file system to.\n  sync: FileSystem;\n  // The asynchronous file system to mirror.\n  async: FileSystem;\n}\n\n/**\n * AsyncMirrorFS mirrors a synchronous filesystem into an asynchronous filesystem\n * by:\n *\n * * Performing operations over the in-memory copy, while asynchronously pipelining them\n *   to the backing store.\n * * During application loading, the contents of the async file system can be reloaded into\n *   the synchronous store, if desired.\n *\n * The two stores will be kept in sync. The most common use-case is to pair a synchronous\n * in-memory filesystem with an asynchronous backing store.\n *\n * Example: Mirroring an IndexedDB file system to an in memory file system. Now, you can use\n * IndexedDB synchronously.\n *\n * ```javascript\n * BrowserFS.configure({\n *   fs: \"AsyncMirror\",\n *   options: {\n *     sync: { fs: \"InMemory\" },\n *     async: { fs: \"IndexedDB\" }\n *   }\n * }, function(e) {\n *   // BrowserFS is initialized and ready-to-use!\n * });\n * ```\n *\n * Or, alternatively:\n *\n * ```javascript\n * BrowserFS.FileSystem.IndexedDB.Create(function(e, idbfs) {\n *   BrowserFS.FileSystem.InMemory.Create(function(e, inMemory) {\n *     BrowserFS.FileSystem.AsyncMirror({\n *       sync: inMemory, async: idbfs\n *     }, function(e, mirrored) {\n *       BrowserFS.initialize(mirrored);\n *     });\n *   });\n * });\n * ```\n */\nexport default class AsyncMirror extends SynchronousFileSystem implements FileSystem {\n  public static readonly Name = \"AsyncMirror\";\n\n  public static readonly Options: FileSystemOptions = {\n    sync: {\n      type: \"object\",\n      description: \"The synchronous file system to mirror the asynchronous file system to.\"\n    },\n    async: {\n      type: \"object\",\n      description: \"The asynchronous file system to mirror.\"\n    }\n  };\n\n  /**\n   * Constructs and initializes an AsyncMirror file system with the given options.\n   */\n  public static Create(opts: AsyncMirrorOptions, cb: BFSCallback<AsyncMirror>): void {\n    try {\n      const fs = new AsyncMirror(opts.sync, opts.async, false);\n      fs.initialize((e?) => {\n        if (e) {\n          cb(e);\n        } else {\n          cb(null, fs);\n        }\n      }, false);\n    } catch (e) {\n      cb(e);\n    }\n  }\n\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  /**\n   * Queue of pending asynchronous operations.\n   */\n  private _queue: IAsyncOperation[] = [];\n  private _queueRunning: boolean = false;\n  private _sync: FileSystem;\n  private _async: FileSystem;\n  private _isInitialized: boolean = false;\n  private _initializeCallbacks: ((e?: ApiError) => void)[] = [];\n\n  /**\n   * **Deprecated; use AsyncMirror.Create() method instead.**\n   *\n   * Mirrors the synchronous file system into the asynchronous file system.\n   *\n   * **IMPORTANT**: You must call `initialize` on the file system before it can be used.\n   * @param sync The synchronous file system to mirror the asynchronous file system to.\n   * @param async The asynchronous file system to mirror.\n   */\n  constructor(sync: FileSystem, async: FileSystem, deprecateMsg = true) {\n    super();\n    this._sync = sync;\n    this._async = async;\n    if (!sync.supportsSynch()) {\n      throw new Error(\"The first argument to AsyncMirror needs to be a synchronous file system.\");\n    }\n    deprecationMessage(deprecateMsg, AsyncMirror.Name, { sync: \"sync file system instance\", async: \"async file system instance\"});\n  }\n\n  public getName(): string {\n    return AsyncMirror.Name;\n  }\n\n  public _syncSync(fd: PreloadFile<any>) {\n    this._sync.writeFileSync(fd.getPath(), fd.getBuffer(), null, FileFlag.getFileFlag('w'), fd.getStats().mode);\n    this.enqueueOp({\n      apiMethod: 'writeFile',\n      arguments: [fd.getPath(), fd.getBuffer(), null, fd.getFlag(), fd.getStats().mode]\n    });\n  }\n\n  /**\n   * Called once to load up files from async storage into sync storage.\n   */\n  public initialize(userCb: BFSOneArgCallback, deprecateMsg = true): void {\n    if (deprecateMsg) {\n      console.warn(`[AsyncMirror] AsyncMirror.initialize() is deprecated and will be removed in the next major version. Please use 'AsyncMirror.Create({ sync: (sync file system instance), async: (async file system instance)}, cb)' to create and initialize AsyncMirror instances.`);\n    }\n    const callbacks = this._initializeCallbacks;\n\n    const end = (e?: ApiError): void => {\n      this._isInitialized = !e;\n      this._initializeCallbacks = [];\n      callbacks.forEach((cb) => cb(e));\n    };\n\n    if (!this._isInitialized) {\n      // First call triggers initialization, the rest wait.\n      if (callbacks.push(userCb) === 1) {\n        const copyDirectory = (p: string, mode: number, cb: BFSOneArgCallback) => {\n          if (p !== '/') {\n            this._sync.mkdirSync(p, mode);\n          }\n          this._async.readdir(p, (err, files) => {\n            let i = 0;\n            // NOTE: This function must not be in a lexically nested statement,\n            // such as an if or while statement. Safari refuses to run the\n            // script since it is undefined behavior.\n            function copyNextFile(err?: ApiError) {\n              if (err) {\n                cb(err);\n              } else if (i < files!.length) {\n                copyItem(path.join(p, files![i]), copyNextFile);\n                i++;\n              } else {\n                cb();\n              }\n            }\n            if (err) {\n              cb(err);\n            } else {\n              copyNextFile();\n            }\n          });\n        }, copyFile = (p: string, mode: number, cb: BFSOneArgCallback) => {\n          this._async.readFile(p, null, FileFlag.getFileFlag('r'), (err, data) => {\n            if (err) {\n              cb(err);\n            } else {\n              try {\n                this._sync.writeFileSync(p, data!, null, FileFlag.getFileFlag('w'), mode);\n              } catch (e) {\n                err = e;\n              } finally {\n                cb(err);\n              }\n            }\n          });\n        }, copyItem = (p: string, cb: BFSOneArgCallback) => {\n          this._async.stat(p, false, (err, stats) => {\n            if (err) {\n              cb(err);\n            } else if (stats!.isDirectory()) {\n              copyDirectory(p, stats!.mode, cb);\n            } else {\n              copyFile(p, stats!.mode, cb);\n            }\n          });\n        };\n        copyDirectory('/', 0, end);\n      }\n    } else {\n      userCb();\n    }\n  }\n\n  public isReadOnly(): boolean { return false; }\n  public supportsSynch(): boolean { return true; }\n  public supportsLinks(): boolean { return false; }\n  public supportsProps(): boolean { return this._sync.supportsProps() && this._async.supportsProps(); }\n\n  public renameSync(oldPath: string, newPath: string): void {\n    this.checkInitialized();\n    this._sync.renameSync(oldPath, newPath);\n    this.enqueueOp({\n      apiMethod: 'rename',\n      arguments: [oldPath, newPath]\n    });\n  }\n\n  public statSync(p: string, isLstat: boolean): Stats {\n    this.checkInitialized();\n    return this._sync.statSync(p, isLstat);\n  }\n\n  public openSync(p: string, flag: FileFlag, mode: number): File {\n    this.checkInitialized();\n    // Sanity check: Is this open/close permitted?\n    const fd = this._sync.openSync(p, flag, mode);\n    fd.closeSync();\n    return new MirrorFile(this, p, flag, this._sync.statSync(p, false), this._sync.readFileSync(p, null, FileFlag.getFileFlag('r')));\n  }\n\n  public unlinkSync(p: string): void {\n    this.checkInitialized();\n    this._sync.unlinkSync(p);\n    this.enqueueOp({\n      apiMethod: 'unlink',\n      arguments: [p]\n    });\n  }\n\n  public rmdirSync(p: string): void {\n    this.checkInitialized();\n    this._sync.rmdirSync(p);\n    this.enqueueOp({\n      apiMethod: 'rmdir',\n      arguments: [p]\n    });\n  }\n\n  public mkdirSync(p: string, mode: number): void {\n    this.checkInitialized();\n    this._sync.mkdirSync(p, mode);\n    this.enqueueOp({\n      apiMethod: 'mkdir',\n      arguments: [p, mode]\n    });\n  }\n\n  public readdirSync(p: string): string[] {\n    this.checkInitialized();\n    return this._sync.readdirSync(p);\n  }\n\n  public existsSync(p: string): boolean {\n    this.checkInitialized();\n    return this._sync.existsSync(p);\n  }\n\n  public chmodSync(p: string, isLchmod: boolean, mode: number): void {\n    this.checkInitialized();\n    this._sync.chmodSync(p, isLchmod, mode);\n    this.enqueueOp({\n      apiMethod: 'chmod',\n      arguments: [p, isLchmod, mode]\n    });\n  }\n\n  public chownSync(p: string, isLchown: boolean, uid: number, gid: number): void {\n    this.checkInitialized();\n    this._sync.chownSync(p, isLchown, uid, gid);\n    this.enqueueOp({\n      apiMethod: 'chown',\n      arguments: [p, isLchown, uid, gid]\n    });\n  }\n\n  public utimesSync(p: string, atime: Date, mtime: Date): void {\n    this.checkInitialized();\n    this._sync.utimesSync(p, atime, mtime);\n    this.enqueueOp({\n      apiMethod: 'utimes',\n      arguments: [p, atime, mtime]\n    });\n  }\n\n  private checkInitialized(): void {\n    if (!this._isInitialized) {\n      throw new ApiError(ErrorCode.EPERM, \"AsyncMirrorFS is not initialized. Please initialize AsyncMirrorFS using its initialize() method before using it.\");\n    }\n  }\n\n  private enqueueOp(op: IAsyncOperation) {\n    this._queue.push(op);\n    if (!this._queueRunning) {\n      this._queueRunning = true;\n      const doNextOp = (err?: ApiError) => {\n        if (err) {\n          console.error(`WARNING: File system has desynchronized. Received following error: ${err}\\n$`);\n        }\n        if (this._queue.length > 0) {\n          const op = this._queue.shift()!,\n            args = op.arguments;\n          args.push(doNextOp);\n          (<Function> (<any> this._async)[op.apiMethod]).apply(this._async, args);\n        } else {\n          this._queueRunning = false;\n        }\n      };\n      doNextOp();\n    }\n  }\n}\n"]}