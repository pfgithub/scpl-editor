"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WFParameter_1 = require("./WFParameter");
class WFExpandingParameter extends WFParameter_1.WFParameter {
    constructor(data, name = "Expand Arrow", docs = "https://pfgithub.github.io/shortcutslang/gettingstarted#switch-or-expanding-or-boolean-fields") {
        super(data, name, docs);
        this.allowsVariables = false;
    }
    genDocsArgName() {
        return `(true | false)`;
    }
    genDocs() {
        return `${super.genDocs()}

Accepts a boolean for if this
parameter is expanded or not.
Often expanding fields will
enable or disable other
arguments. If you are using
labels, these can be ignored.`;
    }
    build(cc, parse) {
        if (parse.canBeBoolean(cc)) {
            return parse.asBoolean(cc);
        }
        throw parse.error(cc, "Expanding fields only accept booleans (true/false).");
    }
}
exports.WFExpandingParameter = WFExpandingParameter;
