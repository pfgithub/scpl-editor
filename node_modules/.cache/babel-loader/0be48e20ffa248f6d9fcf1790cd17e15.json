{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brandonjordan/Documents/GitHub/scpl-editor/src/UploadShortcutModal.tsx\";\nimport React, { Component } from \"react\";\nimport { inverse } from \"scpl\";\nimport { ModalContainer } from \"./ModalContainer\";\nimport { DownloadStatusSwitcher } from \"./DownloadStatusSwitcher\";\nimport { downloadShortcut as _downloadShortcut } from \"./Uploader\";\nimport \"./UploadShortcutModal.css\";\nexport var UploadShortcutModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadShortcutModal, _Component);\n\n  function UploadShortcutModal(props) {\n    var _this;\n\n    _classCallCheck(this, UploadShortcutModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadShortcutModal).call(this, props));\n    _this.state = {\n      uploadStatus: {\n        uploadStatus: \"None\"\n      },\n      shortcutID: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UploadShortcutModal, [{\n    key: \"convertShortcut\",\n    value: function () {\n      var _convertShortcut = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var binaryStr, inverted;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                binaryStr = new Buffer(data);\n                _context.prev = 1;\n                inverted = inverse(binaryStr);\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](1);\n                this.setState({\n                  uploadStatus: {\n                    uploadStatus: \"Error\",\n                    uploadError: \"An unhandled error occured while trying to convert shortcut -> scpl. The error is: \".concat(_context.t0.toString())\n                  }\n                });\n                throw new Error(_context.t0);\n\n              case 9:\n                this.props.onResult(inverted);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 5]]);\n      }));\n\n      function convertShortcut(_x) {\n        return _convertShortcut.apply(this, arguments);\n      }\n\n      return convertShortcut;\n    }()\n  }, {\n    key: \"downloadShortcut\",\n    value: function () {\n      var _downloadShortcut2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var uploadResult;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.state.shortcutID) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                this.setState({\n                  uploadStatus: {\n                    uploadStatus: \"Error\",\n                    uploadError: \"No ID.\"\n                  }\n                });\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.setState({\n                  uploadStatus: {\n                    uploadStatus: \"Uploading\"\n                  }\n                });\n                _context2.next = 6;\n                return _downloadShortcut(this.state.shortcutID);\n\n              case 6:\n                uploadResult = _context2.sent;\n\n                if (!(uploadResult.result === \"error\")) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                this.setState({\n                  uploadStatus: {\n                    uploadStatus: \"Error\",\n                    uploadError: uploadResult.message\n                  }\n                });\n                return _context2.abrupt(\"return\");\n\n              case 10:\n                _context2.next = 12;\n                return this.convertShortcut(uploadResult.shortcut);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function downloadShortcut() {\n        return _downloadShortcut2.apply(this, arguments);\n      }\n\n      return downloadShortcut;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalContainer, {\n        onCancel: function onCancel() {\n          return _this2.props.onCancel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal dialog\",\n        id: \"create-edit-shortcut\",\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cancel-btn\",\n        id: \"close-import\",\n        onClick: function onClick() {\n          return _this2.props.onCancel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Import Shortcut\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"https://www.icloud.com/shortcuts/\",\n        onKeyUp: function onKeyUp(e) {\n          var shortcutID = e.currentTarget.value.match(/[a-z0-9]{32}/);\n\n          if (!shortcutID) {\n            _this2.setState({\n              shortcutID: \"\"\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            shortcutID: shortcutID[0]\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"details-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.shortcutID), React.createElement(DownloadStatusSwitcher, {\n        status: this.state.uploadStatus,\n        requestUpload: function requestUpload() {\n          return _this2.downloadShortcut();\n        },\n        detailsMsg: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"To convert the imported shortcut, ScPL Editor will upload your shortcut to\", \" \", React.createElement(\"a\", {\n          href: \"https://shortcutsweb.app\",\n          target: \"_blank\",\n          rel: \"noopener\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"shortcutsweb.app\"), \".\"),\n        uploadAction: \"Import\",\n        additionalButtonClasses: \"large-btn stretch-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UploadShortcutModal;\n}(Component);","map":{"version":3,"sources":["/Users/brandonjordan/Documents/GitHub/scpl-editor/src/UploadShortcutModal.tsx"],"names":["React","Component","inverse","ModalContainer","DownloadStatusSwitcher","downloadShortcut","UploadShortcutModal","props","state","uploadStatus","shortcutID","data","binaryStr","Buffer","inverted","setState","uploadError","toString","Error","onResult","uploadResult","result","message","convertShortcut","shortcut","onCancel","display","e","currentTarget","value","match"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { inverse } from \"scpl\";\n\nimport { ModalContainer } from \"./ModalContainer\";\n\nimport { DownloadStatusSwitcher, UploadStatus } from \"./DownloadStatusSwitcher\";\nimport { downloadShortcut } from \"./Uploader\";\n\nimport \"./UploadShortcutModal.css\";\n\ntype UploadShortcutProps = {\n\tonCancel: () => void;\n\tonResult: (filecont: string) => void;\n};\n\nexport class UploadShortcutModal extends Component<\n\tUploadShortcutProps,\n\t{ uploadStatus: UploadStatus; shortcutID: string }\n> {\n\tconstructor(props: Readonly<UploadShortcutProps>) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tuploadStatus: { uploadStatus: \"None\" },\n\t\t\tshortcutID: \"\"\n\t\t};\n\t}\n\tasync convertShortcut(data: ArrayBuffer) {\n\t\tconst binaryStr = new Buffer(data);\n\t\tlet inverted: string;\n\t\ttry {\n\t\t\tinverted = inverse(binaryStr);\n\t\t} catch (e) {\n\t\t\tthis.setState({\n\t\t\t\tuploadStatus: {\n\t\t\t\t\tuploadStatus: \"Error\",\n\t\t\t\t\tuploadError: `An unhandled error occured while trying to convert shortcut -> scpl. The error is: ${e.toString()}`\n\t\t\t\t}\n\t\t\t});\n\t\t\tthrow new Error(e);\n\t\t}\n\t\tthis.props.onResult(inverted);\n\t}\n\tasync downloadShortcut() {\n\t\tif (!this.state.shortcutID) {\n\t\t\tthis.setState({\n\t\t\t\tuploadStatus: {\n\t\t\t\t\tuploadStatus: \"Error\",\n\t\t\t\t\tuploadError: \"No ID.\"\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\tuploadStatus: { uploadStatus: \"Uploading\" }\n\t\t});\n\t\tconst uploadResult = await downloadShortcut(this.state.shortcutID);\n\t\tif (uploadResult.result === \"error\") {\n\t\t\tthis.setState({\n\t\t\t\tuploadStatus: {\n\t\t\t\t\tuploadStatus: \"Error\",\n\t\t\t\t\tuploadError: uploadResult.message\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// done\n\t\tawait this.convertShortcut(uploadResult.shortcut);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ModalContainer onCancel={() => this.props.onCancel()}>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"modal dialog\"\n\t\t\t\t\tid=\"create-edit-shortcut\"\n\t\t\t\t\tstyle={{ display: \"block\" }}\n\t\t\t\t>\n\t\t\t\t<div\n\t\t\t\tclassName=\"cancel-btn\"\n\t\t\t\tid=\"close-import\"\n\t\t\t\tonClick={() => this.props.onCancel()}\n\t\t\t\t>\n\t\t\t\t\tCancel\n\t\t\t\t</div>\n\t\t\t\t\t<h2>Import Shortcut</h2>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"https://www.icloud.com/shortcuts/\"\n\t\t\t\t\t\tonKeyUp={e => {\n\t\t\t\t\t\t\tconst shortcutID = e.currentTarget.value.match(\n\t\t\t\t\t\t\t\t/[a-z0-9]{32}/\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!shortcutID) {\n\t\t\t\t\t\t\t\tthis.setState({ shortcutID: \"\" });\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({ shortcutID: shortcutID[0] });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className=\"details-text\">{this.state.shortcutID}</p>\n\t\t\t\t\t<DownloadStatusSwitcher\n\t\t\t\t\t\tstatus={this.state.uploadStatus}\n\t\t\t\t\t\trequestUpload={() => this.downloadShortcut()}\n\t\t\t\t\t\tdetailsMsg={\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tTo convert the imported shortcut, ScPL Editor will upload your shortcut\n\t\t\t\t\t\t\t\tto{\" \"}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"https://shortcutsweb.app\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tshortcutsweb.app\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuploadAction=\"Import\"\n\t\t\t\t\t\tadditionalButtonClasses=\"large-btn stretch-btn\"\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t</ModalContainer>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}