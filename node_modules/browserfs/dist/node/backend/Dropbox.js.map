{"version":3,"file":"Dropbox.js","sourceRoot":"","sources":["../../../src/backend/Dropbox.ts"],"names":[],"mappings":"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","sourcesContent":["import PreloadFile from '../generic/preload_file';\nimport {BaseFileSystem, FileSystem, BFSOneArgCallback, BFSCallback, FileSystemOptions} from '../core/file_system';\nimport {FileFlag} from '../core/file_flag';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {File} from '../core/file';\nimport {each as asyncEach} from 'async';\nimport * as path from 'path';\nimport {arrayBuffer2Buffer, buffer2ArrayBuffer, emptyBuffer, deprecationMessage} from '../core/util';\n\n/**\n * @hidden\n */\nlet errorCodeLookup: {[dropboxErrorCode: number]: ErrorCode};\n/**\n * Lazily construct error code lookup, since DropboxJS might be loaded *after* BrowserFS (or not at all!)\n * @hidden\n */\nfunction constructErrorCodeLookup() {\n  if (errorCodeLookup) {\n    return;\n  }\n  errorCodeLookup = {};\n  // This indicates a network transmission error on modern browsers. Internet Explorer might cause this code to be reported on some API server errors.\n  errorCodeLookup[Dropbox.ApiError.NETWORK_ERROR] = ErrorCode.EIO;\n  // This happens when the contentHash parameter passed to a Dropbox.Client#readdir or Dropbox.Client#stat matches the most recent content, so the API call response is omitted, to save bandwidth.\n  // errorCodeLookup[Dropbox.ApiError.NO_CONTENT];\n  // The error property on {Dropbox.ApiError#response} should indicate which input parameter is invalid and why.\n  errorCodeLookup[Dropbox.ApiError.INVALID_PARAM] = ErrorCode.EINVAL;\n  // The OAuth token used for the request will never become valid again, so the user should be re-authenticated.\n  errorCodeLookup[Dropbox.ApiError.INVALID_TOKEN] = ErrorCode.EPERM;\n  // This indicates a bug in dropbox.js and should never occur under normal circumstances.\n  // ^ Actually, that's false. This occurs when you try to move folders to themselves, or move a file over another file.\n  errorCodeLookup[Dropbox.ApiError.OAUTH_ERROR] = ErrorCode.EPERM;\n  // This happens when trying to read from a non-existing file, readdir a non-existing directory, write a file into a non-existing directory, etc.\n  errorCodeLookup[Dropbox.ApiError.NOT_FOUND] = ErrorCode.ENOENT;\n  // This indicates a bug in dropbox.js and should never occur under normal circumstances.\n  errorCodeLookup[Dropbox.ApiError.INVALID_METHOD] = ErrorCode.EINVAL;\n  // This happens when a Dropbox.Client#readdir or Dropbox.Client#stat call would return more than a maximum amount of directory entries.\n  errorCodeLookup[Dropbox.ApiError.NOT_ACCEPTABLE] = ErrorCode.EINVAL;\n  // This is used by some backend methods to indicate that the client needs to download server-side changes and perform conflict resolution. Under normal usage, errors with this code should never surface to the code using dropbox.js.\n  errorCodeLookup[Dropbox.ApiError.CONFLICT] = ErrorCode.EINVAL;\n  // Status value indicating that the application is making too many requests.\n  errorCodeLookup[Dropbox.ApiError.RATE_LIMITED] = ErrorCode.EBUSY;\n  // The request should be retried after some time.\n  errorCodeLookup[Dropbox.ApiError.SERVER_ERROR] = ErrorCode.EBUSY;\n  // Status value indicating that the user's Dropbox is over its storage quota.\n  errorCodeLookup[Dropbox.ApiError.OVER_QUOTA] = ErrorCode.ENOSPC;\n}\n\n/**\n * @hidden\n */\ninterface ICachedPathInfo {\n  stat: Dropbox.File.Stat;\n}\n\n/**\n * @hidden\n */\ninterface ICachedFileInfo extends ICachedPathInfo {\n  contents: ArrayBuffer;\n}\n\n/**\n * @hidden\n */\nfunction isFileInfo(cache: ICachedPathInfo): cache is ICachedFileInfo {\n  return cache && cache.stat.isFile;\n}\n\n/**\n * @hidden\n */\ninterface ICachedDirInfo extends ICachedPathInfo {\n  contents: string[];\n}\n\n/**\n * @hidden\n */\nfunction isDirInfo(cache: ICachedPathInfo): cache is ICachedDirInfo {\n  return cache && cache.stat.isFolder;\n}\n\n/**\n * @hidden\n */\nfunction isArrayBuffer(ab: any): ab is ArrayBuffer {\n  // Accept null / undefined, too.\n  return ab === null || ab === undefined || (typeof(ab) === 'object' && typeof(ab['byteLength']) === 'number');\n}\n\n/**\n * Wraps a Dropbox client and caches operations.\n * @hidden\n */\nclass CachedDropboxClient {\n  private _cache: {[path: string]: ICachedPathInfo} = {};\n  private _client: Dropbox.Client;\n\n  constructor(client: Dropbox.Client) {\n    this._client = client;\n  }\n\n  public readdir(p: string, cb: (error: Dropbox.ApiError | null, contents?: string[]) => void): void {\n    const cacheInfo = this.getCachedDirInfo(p);\n\n    this._wrap((interceptCb) => {\n      if (cacheInfo !== null && cacheInfo.contents) {\n        this._client.readdir(p, {\n          contentHash: cacheInfo.stat.contentHash\n        }, interceptCb);\n      } else {\n        this._client.readdir(p, interceptCb);\n      }\n    }, (err: Dropbox.ApiError, filenames: string[], stat: Dropbox.File.Stat, folderEntries: Dropbox.File.Stat[]) => {\n      if (err) {\n        if (err.status === Dropbox.ApiError.NO_CONTENT && cacheInfo !== null) {\n          cb(null, cacheInfo.contents.slice(0));\n        } else {\n          cb(err);\n        }\n      } else {\n        this.updateCachedDirInfo(p, stat, filenames.slice(0));\n        folderEntries.forEach((entry) => {\n          this.updateCachedInfo(path.join(p, entry.name), entry);\n        });\n        cb(null, filenames);\n      }\n    });\n  }\n\n  public remove(p: string, cb: (error?: Dropbox.ApiError | null) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.remove(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat?: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat!);\n      }\n      cb(err);\n    });\n  }\n\n  public move(src: string, dest: string, cb: (error?: Dropbox.ApiError) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.move(src, dest, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.deleteCachedInfo(src);\n        this.updateCachedInfo(dest, stat);\n      }\n      cb(err);\n    });\n  }\n\n  public stat(p: string, cb: (error: Dropbox.ApiError, stat?: Dropbox.File.Stat) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.stat(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat);\n      }\n      cb(err, stat);\n    });\n  }\n\n  public readFile(p: string, cb: (error: Dropbox.ApiError, file?: ArrayBuffer, stat?: Dropbox.File.Stat) => void): void {\n    const cacheInfo = this.getCachedFileInfo(p);\n    if (cacheInfo !== null && cacheInfo.contents !== null) {\n      // Try to use cached info; issue a stat to see if contents are up-to-date.\n      this.stat(p, (error, stat?) => {\n        if (error) {\n          cb(error);\n        } else if (stat!.contentHash === cacheInfo!.stat.contentHash) {\n          // No file changes.\n          cb(error, cacheInfo!.contents.slice(0), cacheInfo!.stat);\n        } else {\n          // File changes; rerun to trigger actual readFile.\n          this.readFile(p, cb);\n        }\n      });\n    } else {\n      this._wrap((interceptCb) => {\n        this._client.readFile(p, { arrayBuffer: true }, interceptCb);\n      }, (err: Dropbox.ApiError, contents: any, stat: Dropbox.File.Stat) => {\n        if (!err) {\n          this.updateCachedInfo(p, stat, contents.slice(0));\n        }\n        cb(err, contents, stat);\n      });\n    }\n  }\n\n  public writeFile(p: string, contents: ArrayBuffer, cb: (error: Dropbox.ApiError, stat?: Dropbox.File.Stat) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.writeFile(p, contents, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat, contents.slice(0));\n      }\n      cb(err, stat);\n    });\n  }\n\n  public mkdir(p: string, cb: (error?: Dropbox.ApiError) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.mkdir(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat, []);\n      }\n      cb(err);\n    });\n  }\n\n  /**\n   * Wraps an operation such that we retry a failed operation 3 times.\n   * Necessary to deal with Dropbox rate limiting.\n   *\n   * @param performOp Function that performs the operation. Will be called up to three times.\n   * @param cb Called when the operation succeeds, fails in a non-temporary manner, or fails three times.\n   */\n  private _wrap(performOp: (interceptCb: (error: Dropbox.ApiError) => void) => void, cb: Function): void {\n    let numRun = 0;\n    const interceptCb = function(error: Dropbox.ApiError): void {\n        // Timeout duration, in seconds.\n        const timeoutDuration: number = 2;\n        if (error && 3 > (++numRun)) {\n          switch (error.status) {\n            case Dropbox.ApiError.SERVER_ERROR:\n            case Dropbox.ApiError.NETWORK_ERROR:\n            case Dropbox.ApiError.RATE_LIMITED:\n              setTimeout(() => {\n                performOp(interceptCb);\n              }, timeoutDuration * 1000);\n              break;\n            default:\n              cb.apply(null, arguments);\n              break;\n          }\n        } else {\n          cb.apply(null, arguments);\n        }\n      };\n\n    performOp(interceptCb);\n  }\n\n  private getCachedInfo(p: string): ICachedPathInfo {\n    return this._cache[p.toLowerCase()];\n  }\n\n  private putCachedInfo(p: string, cache: ICachedPathInfo): void {\n    this._cache[p.toLowerCase()] = cache;\n  }\n\n  private deleteCachedInfo(p: string): void {\n    delete this._cache[p.toLowerCase()];\n  }\n\n  private getCachedDirInfo(p: string): ICachedDirInfo | null {\n    const info = this.getCachedInfo(p);\n    if (isDirInfo(info)) {\n      return info;\n    } else {\n      return null;\n    }\n  }\n\n  private getCachedFileInfo(p: string): ICachedFileInfo | null {\n    const info = this.getCachedInfo(p);\n    if (isFileInfo(info)) {\n      return info;\n    } else {\n      return null;\n    }\n  }\n\n  private updateCachedDirInfo(p: string, stat: Dropbox.File.Stat, contents: string[] | null = null): void {\n    const cachedInfo = this.getCachedInfo(p);\n    // Dropbox uses the *contentHash* property for directories.\n    // Ignore stat objects w/o a contentHash defined; those actually exist!!!\n    // (Example: readdir returns an array of stat objs; stat objs for dirs in that context have no contentHash)\n    if (stat.contentHash !== null && (cachedInfo === undefined || cachedInfo.stat.contentHash !== stat.contentHash)) {\n      this.putCachedInfo(p, <ICachedDirInfo> {\n        stat: stat,\n        contents: contents\n      });\n    }\n  }\n\n  private updateCachedFileInfo(p: string, stat: Dropbox.File.Stat, contents: ArrayBuffer | null = null): void {\n    const cachedInfo = this.getCachedInfo(p);\n    // Dropbox uses the *versionTag* property for files.\n    // Ignore stat objects w/o a versionTag defined.\n    if (stat.versionTag !== null && (cachedInfo === undefined || cachedInfo.stat.versionTag !== stat.versionTag)) {\n      this.putCachedInfo(p, <ICachedFileInfo> {\n        stat: stat,\n        contents: contents\n      });\n    }\n  }\n\n  private updateCachedInfo(p: string, stat: Dropbox.File.Stat, contents: ArrayBuffer | string[] | null = null): void {\n    if (stat.isFile && isArrayBuffer(contents)) {\n      this.updateCachedFileInfo(p, stat, contents);\n    } else if (stat.isFolder && Array.isArray(contents)) {\n      this.updateCachedDirInfo(p, stat, contents);\n    }\n  }\n}\n\nexport class DropboxFile extends PreloadFile<DropboxFileSystem> implements File {\n  constructor(_fs: DropboxFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n\n  public sync(cb: BFSOneArgCallback): void {\n    if (this.isDirty()) {\n      const buffer = this.getBuffer(),\n        arrayBuffer = buffer2ArrayBuffer(buffer);\n      this._fs._writeFileStrict(this.getPath(), arrayBuffer, (e?: ApiError) => {\n        if (!e) {\n          this.resetDirty();\n        }\n        cb(e);\n      });\n    } else {\n      cb();\n    }\n  }\n\n  public close(cb: BFSOneArgCallback): void {\n    this.sync(cb);\n  }\n}\n\n/**\n * Options for the Dropbox file system.\n */\nexport interface DropboxFileSystemOptions {\n  // An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.\n  client: Dropbox.Client;\n}\n\n/**\n * A read/write file system backed by Dropbox cloud storage.\n *\n * Uses the Dropbox V1 API.\n *\n * NOTE: You must use the v0.10 version of the [Dropbox JavaScript SDK](https://www.npmjs.com/package/dropbox).\n */\nexport default class DropboxFileSystem extends BaseFileSystem implements FileSystem {\n  public static readonly Name = \"Dropbox\";\n\n  public static readonly Options: FileSystemOptions = {\n    client: {\n      type: \"object\",\n      description: \"An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.\",\n      validator: (opt: Dropbox.Client, cb: BFSOneArgCallback): void => {\n        if (opt.isAuthenticated && opt.isAuthenticated()) {\n          cb();\n        } else {\n          cb(new ApiError(ErrorCode.EINVAL, `'client' option must be an authenticated Dropbox client from the v0.10 JS SDK.`));\n        }\n      }\n    }\n  };\n\n  /**\n   * Creates a new DropboxFileSystem instance with the given options.\n   * Must be given an *authenticated* DropboxJS client from the old v0.10 version of the Dropbox JS SDK.\n   */\n  public static Create(opts: DropboxFileSystemOptions, cb: BFSCallback<DropboxFileSystem>): void {\n    cb(null, new DropboxFileSystem(opts.client, false));\n  }\n\n  public static isAvailable(): boolean {\n    // Checks if the Dropbox library is loaded.\n    return typeof Dropbox !== 'undefined';\n  }\n\n  // The Dropbox client.\n  private _client: CachedDropboxClient;\n\n  /**\n   * **Deprecated. Please use Dropbox.Create() method instead.**\n   *\n   * Constructs a Dropbox-backed file system using the *authenticated* DropboxJS client.\n   *\n   * Note that you must use the old v0.10 version of the Dropbox JavaScript SDK.\n   */\n  constructor(client: Dropbox.Client, deprecateMsg = true) {\n    super();\n    this._client = new CachedDropboxClient(client);\n    deprecationMessage(deprecateMsg, DropboxFileSystem.Name, { client: \"authenticated dropbox client instance\" });\n    constructErrorCodeLookup();\n  }\n\n  public getName(): string {\n    return DropboxFileSystem.Name;\n  }\n\n  public isReadOnly(): boolean {\n    return false;\n  }\n\n  // Dropbox doesn't support symlinks, properties, or synchronous calls\n\n  public supportsSymlinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return false;\n  }\n\n  public empty(mainCb: BFSOneArgCallback): void {\n    this._client.readdir('/', (error, files) => {\n      if (error) {\n        mainCb(this.convert(error, '/'));\n      } else {\n        const deleteFile = (file: string, cb: BFSOneArgCallback) => {\n          const p = path.join('/', file);\n          this._client.remove(p, (err) => {\n            cb(err ? this.convert(err, p) : null);\n          });\n        };\n        const finished = (err?: ApiError) => {\n          if (err) {\n            mainCb(err);\n          } else {\n            mainCb();\n          }\n        };\n        // XXX: <any> typing is to get around overly-restrictive ErrorCallback typing.\n        asyncEach(files!, <any> deleteFile, <any> finished);\n      }\n    });\n  }\n\n public rename(oldPath: string, newPath: string, cb: BFSOneArgCallback): void {\n    this._client.move(oldPath, newPath, (error) => {\n      if (error) {\n        // the move is permitted if newPath is a file.\n        // Check if this is the case, and remove if so.\n        this._client.stat(newPath, (error2, stat) => {\n          if (error2 || stat!.isFolder) {\n            const missingPath = (<any> error.response).error.indexOf(oldPath) > -1 ? oldPath : newPath;\n            cb(this.convert(error, missingPath));\n          } else {\n            // Delete file, repeat rename.\n            this._client.remove(newPath, (error2) => {\n              if (error2) {\n                cb(this.convert(error2, newPath));\n              } else {\n                this.rename(oldPath, newPath, cb);\n              }\n            });\n          }\n        });\n      } else {\n        cb();\n      }\n    });\n  }\n\n  public stat(path: string, isLstat: boolean, cb: BFSCallback<Stats>): void {\n    // Ignore lstat case -- Dropbox doesn't support symlinks\n    // Stat the file\n    this._client.stat(path, (error, stat) => {\n      if (error) {\n        cb(this.convert(error, path));\n      } else if (stat && stat.isRemoved) {\n        // Dropbox keeps track of deleted files, so if a file has existed in the\n        // past but doesn't any longer, you wont get an error\n        cb(ApiError.FileError(ErrorCode.ENOENT, path));\n      } else {\n        const stats = new Stats(this._statType(stat!), stat!.size);\n        return cb(null, stats);\n      }\n    });\n  }\n\n  public open(path: string, flags: FileFlag, mode: number, cb: BFSCallback<File>): void {\n    // Try and get the file's contents\n    this._client.readFile(path, (error, content, dbStat) => {\n      if (error) {\n        // If the file's being opened for reading and doesn't exist, return an\n        // error\n        if (flags.isReadable()) {\n          cb(this.convert(error, path));\n        } else {\n          switch (error.status) {\n            // If it's being opened for writing or appending, create it so that\n            // it can be written to\n            case Dropbox.ApiError.NOT_FOUND:\n              const ab = new ArrayBuffer(0);\n              return this._writeFileStrict(path, ab, (error2: ApiError, stat?: Dropbox.File.Stat) => {\n                if (error2) {\n                  cb(error2);\n                } else {\n                  const file = this._makeFile(path, flags, stat!, arrayBuffer2Buffer(ab));\n                  cb(null, file);\n                }\n              });\n            default:\n              return cb(this.convert(error, path));\n          }\n        }\n      } else {\n        // No error\n        let buffer: Buffer;\n        // Dropbox.js seems to set `content` to `null` rather than to an empty\n        // buffer when reading an empty file. Not sure why this is.\n        if (content === null) {\n          buffer = emptyBuffer();\n        } else {\n          buffer = arrayBuffer2Buffer(content!);\n        }\n        const file = this._makeFile(path, flags, dbStat!, buffer);\n        return cb(null, file);\n      }\n    });\n  }\n\n  public _writeFileStrict(p: string, data: ArrayBuffer, cb: BFSCallback<Dropbox.File.Stat>): void {\n    const parent = path.dirname(p);\n    this.stat(parent, false, (error: ApiError, stat?: Stats): void => {\n      if (error) {\n        cb(ApiError.FileError(ErrorCode.ENOENT, parent));\n      } else {\n        this._client.writeFile(p, data, (error2, stat) => {\n          if (error2) {\n            cb(this.convert(error2, p));\n          } else {\n            cb(null, stat);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Private\n   * Returns a BrowserFS object representing the type of a Dropbox.js stat object\n   */\n  public _statType(stat: Dropbox.File.Stat): FileType {\n    return stat.isFile ? FileType.FILE : FileType.DIRECTORY;\n  }\n\n  /**\n   * Private\n   * Returns a BrowserFS object representing a File, created from the data\n   * returned by calls to the Dropbox API.\n   */\n  public _makeFile(path: string, flag: FileFlag, stat: Dropbox.File.Stat, buffer: Buffer): DropboxFile {\n    const type = this._statType(stat);\n    const stats = new Stats(type, stat.size);\n    return new DropboxFile(this, path, flag, stats, buffer);\n  }\n\n  /**\n   * Private\n   * Delete a file or directory from Dropbox\n   * isFile should reflect which call was made to remove the it (`unlink` or\n   * `rmdir`). If this doesn't match what's actually at `path`, an error will be\n   * returned\n   */\n  public _remove(path: string, cb: BFSOneArgCallback, isFile: boolean): void {\n    this._client.stat(path, (error, stat) => {\n      if (error) {\n        cb(this.convert(error, path));\n      } else {\n        if (stat!.isFile && !isFile) {\n          cb(ApiError.FileError(ErrorCode.ENOTDIR, path));\n        } else if (!stat!.isFile && isFile) {\n          cb(ApiError.FileError(ErrorCode.EISDIR, path));\n        } else {\n          this._client.remove(path, (error) => {\n            if (error) {\n              cb(this.convert(error, path));\n            } else {\n              cb(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Delete a file\n   */\n  public unlink(path: string, cb: BFSOneArgCallback): void {\n    this._remove(path, cb, true);\n  }\n\n  /**\n   * Delete a directory\n   */\n  public rmdir(path: string, cb: BFSOneArgCallback): void {\n    this._remove(path, cb, false);\n  }\n\n  /**\n   * Create a directory\n   */\n  public mkdir(p: string, mode: number, cb: BFSOneArgCallback): void {\n    // Dropbox.js' client.mkdir() behaves like `mkdir -p`, i.e. it creates a\n    // directory and all its ancestors if they don't exist.\n    // Node's fs.mkdir() behaves like `mkdir`, i.e. it throws an error if an attempt\n    // is made to create a directory without a parent.\n    // To handle this inconsistency, a check for the existence of `path`'s parent\n    // must be performed before it is created, and an error thrown if it does\n    // not exist\n    const parent = path.dirname(p);\n    this._client.stat(parent, (error, stat) => {\n      if (error) {\n        cb(this.convert(error, parent));\n      } else {\n        this._client.mkdir(p, (error) => {\n          if (error) {\n            cb(ApiError.FileError(ErrorCode.EEXIST, p));\n          } else {\n            cb(null);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Get the names of the files in a directory\n   */\n  public readdir(path: string, cb: BFSCallback<string[]>): void {\n    this._client.readdir(path, (error, files) => {\n      if (error) {\n        return cb(this.convert(error));\n      } else {\n        return cb(null, files);\n      }\n    });\n  }\n\n  /**\n   * Converts a Dropbox-JS error into a BFS error.\n   */\n  public convert(err: Dropbox.ApiError, path: string | null = null): ApiError {\n    let errorCode = errorCodeLookup[err.status];\n    if (errorCode === undefined) {\n      errorCode = ErrorCode.EIO;\n    }\n\n    if (!path) {\n      return new ApiError(errorCode);\n    } else {\n      return ApiError.FileError(errorCode, path);\n    }\n  }\n}\n"]}