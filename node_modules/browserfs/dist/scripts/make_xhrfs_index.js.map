{"version":3,"file":"make_xhrfs_index.js","sourceRoot":"","sources":["../../scripts/make_xhrfs_index.ts"],"names":[],"mappings":";;AACA,uBAAyB;AACzB,2BAA6B;AAE7B,IAAM,QAAQ,GAA8C,EAAE,CAAC;AAC/D,IAAM,WAAW,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;AAI1E,gBAAgB,KAAa,EAAE,IAAc,EAAE,IAAY;IACzD,IAAM,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;QACjB,2CAA2C;QAC3C,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC;QACT,CAAC;QACD,IAAM,KAAK,GAAM,KAAK,SAAI,IAAM,CAAC;QACjC,IAAI,CAAC;YACH,wBAAwB;YACxB,IAAM,KAAK,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YACjC,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBAC3B,CAAC;gBACD,iCAAiC;gBACjC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC;gBACT,CAAC;gBACD,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACxC,CAAC;YACD,IAAM,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACxB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA;gBAC7B,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;YACnB,CAAC;QACH,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,sBAAsB;QACxB,CAAC;IACH,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAA;AACb,CAAC;AAED,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AACjE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,QAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,QAAM,CAAC,EAAE,CAAC;QAC9B,EAAE,CAAC,SAAS,CAAC,QAAM,CAAC,CAAC;QACrB,QAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAM,CAAC,CAAC;IAChC,CAAC;IACD,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3D,CAAC;AAAC,IAAI,CAAC,CAAC;IACN,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACzB,CAAC","sourcesContent":["#! /usr/bin/env node\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nconst symLinks: {[dev: number]: {[ino: number]: boolean}} = {};\nconst ignoreFiles = ['.git', 'node_modules', 'bower_components', 'build'];\n\ntype FileTree = {[name: string]: FileTree | null};\n\nfunction rdSync(dpath: string, tree: FileTree, name: string): FileTree {\n  const files = fs.readdirSync(dpath);\n  files.forEach((file) => {\n    // ignore non-essential directories / files\n    if (ignoreFiles.indexOf(file) !== -1 || file[0] === '.') {\n      return;\n    }\n    const fpath = `${dpath}/${file}`;\n    try {\n      // Avoid infinite loops.\n      const lstat = fs.lstatSync(fpath)\n      if (lstat.isSymbolicLink()) {\n        if (!symLinks[lstat.dev]) {\n          symLinks[lstat.dev] = {};\n        }\n        // Ignore if we've seen it before\n        if (symLinks[lstat.dev][lstat.ino]) {\n          return;\n        }\n        symLinks[lstat.dev][lstat.ino] = true;\n      }\n      const fstat = fs.statSync(fpath);\n      if (fstat.isDirectory()) {\n        const child = tree[file] = {}\n        rdSync(fpath, child, file)\n      } else {\n        tree[file] = null\n      }\n    } catch (e) {\n      // Ignore and move on.\n    }\n  });\n  return tree\n}\n\nconst fsListing = JSON.stringify(rdSync(process.cwd(), {}, '/'));\nif (process.argv.length === 3) {\n  const fname = process.argv[2];\n  let parent = path.dirname(fname);\n  while (!fs.existsSync(parent)) {\n    fs.mkdirSync(parent);\n    parent = path.dirname(parent);\n  }\n  fs.writeFileSync(fname, fsListing, { encoding: 'utf8' });\n} else {\n  console.log(fsListing);\n}\n"]}