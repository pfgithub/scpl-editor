{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _classCallCheck = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/createClass\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar WFResource_1 = require(\"../WFResource\");\n\nvar ActionData_1 = require(\"../ActionData\");\n\nvar WFParameter =\n/*#__PURE__*/\nfunction () {\n  function WFParameter(data, typeName, docs) {\n    _classCallCheck(this, WFParameter);\n\n    this._data = data;\n    this.defaultValue = this._data.DefaultValue;\n    this.requiredResources = this._data.RequiredResources || [];\n    this.allowsVariables = (this._data.DisallowedVariableTypes || []).join(_templateObject()) !== \"AskVariable\";\n    this.name = this._data.Label;\n    this.internalName = this._data.Key;\n    this.shortName = ActionData_1.genShortName(this.name, this.internalName);\n    this.readableName = ActionData_1.genShortName(this.name, this.internalName, true);\n\n    if (!this.readableName.startsWith(\"WF\")) {\n      this.readableName = this.readableName.charAt(0).toLowerCase() + this.readableName.slice(1);\n    }\n\n    this.name = this.name || this.shortName;\n    this.typeName = typeName;\n    this.docs = docs;\n    this.requiredResources = this.requiredResources.map(function (resource) {\n      var type = resource.WFResourceClass;\n      var resourceClass = WFResource_1.resourceTypes[type];\n\n      if (!resourceClass) {\n        throw new Error(\"\".concat(type, \" is not a defined resource class.\"));\n      } // @ts-ignore\n\n\n      return new resourceClass(resource);\n    });\n\n    if (this._data.Hidden) {\n      this.requiredResources.push(new WFResource_1.WFWorkflowHiddenResource({\n        Hidden: true\n      }));\n    }\n  }\n\n  _createClass(WFParameter, [{\n    key: \"shouldEnable\",\n    value: function shouldEnable(action) {\n      return this.requiredResources.every(function (resource) {\n        return resource.shouldEnable(action);\n      });\n    }\n  }, {\n    key: \"genDocsArgName\",\n    value: function genDocsArgName() {\n      return \"[???]\";\n    }\n  }, {\n    key: \"genDocsDefaultValue\",\n    value: function genDocsDefaultValue(value) {\n      return \"```\\n\\t\\t\".concat(value, \"\\n\\t\\t```\");\n    }\n  }, {\n    key: \"genDocsAutocompletePlaceholder\",\n    value: function genDocsAutocompletePlaceholder() {\n      return \":\".concat(this._data.DefaultValue ? \"\".concat(this.genDocsArgName(), \":\\\"\").concat(this._data.DefaultValue, \"\\\"\") : \"\".concat(this.genDocsArgName()));\n    }\n  }, {\n    key: \"genDocs\",\n    value: function genDocs() {\n      var docs = \"### \".concat(this.readableName, \": \").concat(this.typeName, \" [(Docs)](\").concat(this.docs, \")\\n\");\n\n      if (this._data.Placeholder) {\n        docs += \"**Placeholder**: \".concat(this.genDocsDefaultValue(this._data.Placeholder), \"\\n\");\n      }\n\n      if (this._data.DefaultValue) {\n        docs += \"**Default Value**: \".concat(this.genDocsDefaultValue(this._data.DefaultValue), \"\\n\");\n      }\n\n      if (this.allowsVariables) {\n        docs += \"**Allows Variables**: \".concat(this.allowsVariables, \"\\n\\n\");\n      }\n\n      docs += \"\".concat(this.requiredResources.map(function (resource) {\n        return \"**Only enabled if**: \".concat(resource.genDocs());\n      }).join(\"\\n\\n\"));\n      return docs;\n    }\n  }, {\n    key: \"build\",\n    value: function build(cc, parse) {\n      throw parse.error(cc, \"This parameter was implemented wrong in ScPL. build() should be overridden by subclasses of WFParameter.\");\n    }\n  }]);\n\n  return WFParameter;\n}();\n\nexports.WFParameter = WFParameter;","map":null,"metadata":{},"sourceType":"script"}