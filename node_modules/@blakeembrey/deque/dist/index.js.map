{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export class Deque<T> {\n  private head = 0\n  private tail = 0\n  private mask = 1\n  private list = new Array<T | undefined>(2)\n\n  constructor(values?: Iterable<T>) {\n    if (values) this.extend(values)\n  }\n\n  private _resize(size: number, length: number) {\n    const { head, mask } = this\n\n    this.head = 0\n    this.tail = size\n    this.mask = length - 1\n\n    // Optimize resize when list is already sorted.\n    if (head === 0) {\n      this.list.length = length\n      return\n    }\n\n    const sorted = new Array<T | undefined>(length)\n    for (let i = 0; i < size; i++) sorted[i] = this.list[(head + i) & mask]\n    this.list = sorted\n  }\n\n  push(value: T): this {\n    this.list[this.tail] = value\n    this.tail = (this.tail + 1) & this.mask\n    if (this.head === this.tail) this._resize(this.list.length, this.list.length << 1)\n    return this\n  }\n\n  pushLeft(value: T): this {\n    this.head = (this.head - 1) & this.mask\n    this.list[this.head] = value\n    if (this.head === this.tail) this._resize(this.list.length, this.list.length << 1)\n    return this\n  }\n\n  clear() {\n    this.head = 0\n    this.tail = 0\n  }\n\n  extend(values: Iterable<T>) {\n    for (const value of values) this.push(value)\n    return this\n  }\n\n  extendLeft(values: Iterable<T>) {\n    for (const value of values) this.pushLeft(value)\n    return this\n  }\n\n  peek(index: number) {\n    const { head, size, tail, list } = this\n\n    if ((index | 0) !== index || index >= size || index < -size) {\n      throw new RangeError('deque index out of range')\n    }\n\n    const pos = ((index >= 0 ? head : tail) + index) & this.mask\n    return list[pos] as T\n  }\n\n  indexOf(needle: T, start = 0) {\n    const { head, list, size, mask } = this\n    const offset = start >= 0 ? start : start < -size ? 0 : size + start\n\n    for (let i = offset; i < size; i++) {\n      if (list[(head + i) & mask] === needle) return i\n    }\n\n    return -1\n  }\n\n  has(needle: T) {\n    const { head, list, size, mask } = this\n\n    for (let i = 0; i < size; i++) {\n      if (list[(head + i) & mask] === needle) return true\n    }\n\n    return false\n  }\n\n  insert(index: number, value: T) {\n    const pos = (this.head + index) & this.mask\n    let cur = this.tail\n\n    // Increase tail position by 1.\n    this.tail = (this.tail + 1) & this.mask\n\n    // Shift items forward 1 to make space for insert.\n    while (cur !== pos) {\n      const prev = (cur - 1) & this.mask\n      this.list[cur] = this.list[prev]\n      cur = prev\n    }\n\n    this.list[pos] = value\n    if (this.head === this.tail) this._resize(this.list.length, this.list.length << 1)\n    return this\n  }\n\n  get size() {\n    return (this.tail - this.head) & this.mask\n  }\n\n  pop() {\n    if (this.head === this.tail) throw new RangeError('pop from an empty deque')\n\n    this.tail = (this.tail - 1) & this.mask\n    const value = this.list[this.tail] as T\n    this.list[this.tail] = undefined\n    if (this.size < this.mask >>> 1) this._resize(this.size, this.list.length >>> 1)\n    return value\n  }\n\n  popLeft() {\n    if (this.head === this.tail) throw new RangeError('pop from an empty deque')\n\n    const value = this.list[this.head] as T\n    this.list[this.head] = undefined\n    this.head = (this.head + 1) & this.mask\n    if (this.size < this.mask >>> 1) this._resize(this.size, this.list.length >>> 1)\n    return value\n  }\n\n  delete(index: number) {\n    if (index >= this.size || index < 0) {\n      throw new RangeError('deque index out of range')\n    }\n\n    const pos = (this.head + index) & this.mask\n    let cur = pos\n\n    // Shift items backward 1 to erase position.\n    while (cur !== this.tail) {\n      const next = (cur + 1) & this.mask\n      this.list[cur] = this.list[next]\n      cur = next\n    }\n\n    // Decrease tail position by 1.\n    this.tail = (this.tail - 1) & this.mask\n\n    if (this.size < this.mask >>> 1) this._resize(this.size, this.list.length >>> 1)\n\n    return this\n  }\n\n  reverse() {\n    const { head, tail, size, mask } = this\n\n    for (let i = 0; i < ~~(size / 2); i++) {\n      const a = (tail - i - 1) & mask\n      const b = (head + i) & mask\n\n      const temp = this.list[a]\n      this.list[a] = this.list[b]\n      this.list[b] = temp\n    }\n\n    return this\n  }\n\n  rotate(n = 1) {\n    const { head, tail } = this\n\n    if (n === 0 || head === tail) return this\n\n    this.head = (head - n) & this.mask\n    this.tail = (tail - n) & this.mask\n\n    if (n > 0) {\n      for (let i = 1; i <= n; i++) {\n        const a = (head - i) & this.mask\n        const b = (tail - i) & this.mask\n\n        this.list[a] = this.list[b]\n        this.list[b] = undefined\n      }\n    } else {\n      for (let i = 0; i > n; i--) {\n        const a = (tail - i) & this.mask\n        const b = (head - i) & this.mask\n\n        this.list[a] = this.list[b]\n        this.list[b] = undefined\n      }\n    }\n\n    return this\n  }\n\n  *entries(): IterableIterator<T> {\n    const { head, size, list, mask } = this\n\n    for (let i = 0; i < size; i++) yield list[(head + i) & mask] as T\n  }\n\n  keys() {\n    return this.entries()\n  }\n\n  values() {\n    return this.entries()\n  }\n\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n}\n"]}