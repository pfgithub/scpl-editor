{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _possibleConstructorReturn = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/brandonjordan/Documents/GitHub/scpl-editor/node_modules/@babel/runtime/helpers/createClass\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"` or `\"], [\"\\\\` or \\\\`\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar WFResource =\n/*#__PURE__*/\nfunction () {\n  function WFResource(data) {\n    _classCallCheck(this, WFResource);\n\n    this._data = data;\n  }\n\n  _createClass(WFResource, [{\n    key: \"shouldEnable\",\n    value: function shouldEnable(_action) {\n      return true;\n    }\n  }, {\n    key: \"genDocs\",\n    value: function genDocs() {\n      return \"Always enabled\";\n    }\n  }]);\n\n  return WFResource;\n}();\n\nexports.WFResource = WFResource;\nvar resourceTypes = {}; // I can't figure out what to put the type as here\n\nexports.resourceTypes = resourceTypes;\n\nvar WFDeviceAttributesResource =\n/*#__PURE__*/\nfunction (_WFResource) {\n  _inherits(WFDeviceAttributesResource, _WFResource);\n\n  function WFDeviceAttributesResource() {\n    _classCallCheck(this, WFDeviceAttributesResource);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WFDeviceAttributesResource).apply(this, arguments));\n  }\n\n  _createClass(WFDeviceAttributesResource, [{\n    key: \"shouldEnable\",\n    value: function shouldEnable(_action) {\n      return true;\n    }\n  }, {\n    key: \"genDocs\",\n    value: function genDocs() {\n      return \"Device attributes match `\".concat(JSON.stringify(this._data.WFDeviceAttributes), \"` This action is always enabled inside Shortcutslang.\");\n    }\n  }]);\n\n  return WFDeviceAttributesResource;\n}(WFResource);\n\nresourceTypes.WFDeviceAttributesResource = WFDeviceAttributesResource;\n\nvar WFWorkflowTypeResource =\n/*#__PURE__*/\nfunction (_WFResource2) {\n  _inherits(WFWorkflowTypeResource, _WFResource2);\n\n  function WFWorkflowTypeResource() {\n    _classCallCheck(this, WFWorkflowTypeResource);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WFWorkflowTypeResource).apply(this, arguments));\n  }\n\n  _createClass(WFWorkflowTypeResource, [{\n    key: \"shouldEnable\",\n    value: function shouldEnable(_action) {\n      return true;\n    }\n  }, {\n    key: \"genDocs\",\n    value: function genDocs() {\n      return \"Workflow type is `\".concat(this._data.WFWorkflowType, \"`. This action is always enabled inside Shortcutslang.\");\n    }\n  }]);\n\n  return WFWorkflowTypeResource;\n}(WFResource);\n\nresourceTypes.WFWorkflowTypeResource = WFWorkflowTypeResource;\n\nvar WFWorkflowHiddenResource =\n/*#__PURE__*/\nfunction (_WFResource3) {\n  _inherits(WFWorkflowHiddenResource, _WFResource3);\n\n  function WFWorkflowHiddenResource() {\n    _classCallCheck(this, WFWorkflowHiddenResource);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WFWorkflowHiddenResource).apply(this, arguments));\n  }\n\n  _createClass(WFWorkflowHiddenResource, [{\n    key: \"shouldEnable\",\n    value: function shouldEnable(_action) {\n      return false;\n    }\n  }, {\n    key: \"genDocs\",\n    value: function genDocs() {\n      return \"This action is always **disabled** inside Shortcutslang.\";\n    }\n  }]);\n\n  return WFWorkflowHiddenResource;\n}(WFResource);\n\nexports.WFWorkflowHiddenResource = WFWorkflowHiddenResource;\n\nvar WFParameterRelationResource =\n/*#__PURE__*/\nfunction (_WFResource4) {\n  _inherits(WFParameterRelationResource, _WFResource4);\n\n  function WFParameterRelationResource(data) {\n    var _this;\n\n    _classCallCheck(this, WFParameterRelationResource);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WFParameterRelationResource).call(this, data));\n    _this.relation = _this._data.WFParameterRelation || \"==\";\n    _this.argInternalName = _this._data.WFParameterKey;\n    _this.argValue = _this._data.WFParameterValue;\n    _this.argValues = _this._data.WFParameterValues || [_this.argValue];\n    var relations = {\n      \"==\": 1,\n      \"!=\": 1,\n      \">=\": 1,\n      \"<=\": 1,\n      \">\": 1,\n      \"<\": 1,\n      \"??\": 1\n    };\n\n    if (!relations[_this.relation]) {\n      throw new Error(\"RelationResource relation type \".concat(_this.relation, \" is not implemented.\"));\n    }\n\n    return _this;\n  }\n\n  _createClass(WFParameterRelationResource, [{\n    key: \"genDocs\",\n    value: function genDocs() {\n      return \"argument \".concat(this.argInternalName, \" \").concat(this.relation, \" `\").concat(this.argValues.join(_templateObject()), \"`\");\n    }\n  }, {\n    key: \"shouldEnable\",\n    value: function shouldEnable(action) {\n      var currentValue = action.parameters.get(this.argInternalName);\n      var currentValueNum = +currentValue;\n      var isNum = !isNaN(currentValueNum);\n\n      switch (this.relation) {\n        case \"==\":\n          return this.argValues.some(function (val) {\n            return val === currentValue;\n          });\n\n        case \"!=\":\n          return this.argValues.indexOf(currentValue) === -1;\n\n        case \">=\":\n          if (!isNum) {\n            return false;\n          }\n\n          return currentValueNum >= this.argValue;\n\n        case \"<=\":\n          if (!isNum) {\n            return false;\n          }\n\n          return currentValueNum <= this.argValue;\n\n        case \">\":\n          if (!isNum) {\n            return false;\n          }\n\n          return currentValueNum > this.argValue;\n\n        case \"<\":\n          if (!isNum) {\n            return false;\n          }\n\n          return currentValueNum < this.argValue;\n\n        case \"??\":\n          return action.parameters.has(this.argInternalName);\n\n        default:\n          throw new Error(\"RelationResource relation type \".concat(this.relation, \" is not implemented.\"));\n      }\n    }\n  }]);\n\n  return WFParameterRelationResource;\n}(WFResource);\n\nresourceTypes.WFParameterRelationResource = WFParameterRelationResource;","map":null,"metadata":{},"sourceType":"script"}