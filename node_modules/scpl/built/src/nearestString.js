"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ActionData_1 = require("./ActionData");
// finds the nearest string to an enum, or undefined if none is close enough
// nearest is defined as lowercase equiv
function nearestString(value, list) {
    // hope that list does not contain any duplicates
    const shortName = ActionData_1.genShortName(value);
    const res = list.filter((i) => Array.isArray(i)
        ? i.some(i => ActionData_1.genShortName(i) === shortName)
        : ActionData_1.genShortName(i) === shortName);
    if (res.length > 1) {
        const res2 = list.filter(i => Array.isArray(i)
            ? i.some(i => i === value)
            : ActionData_1.genShortName(i) === shortName);
        if (res2.length > 1) {
            // eslint-disable-next-line no-console
            console.log("!!!WARN: Same exact value is used multiple times in enum:", JSON.stringify(list), ". Value that is used multiple times is:", value);
            return undefined;
        }
        return Array.isArray(res2[0]) ? res2[0][0] : res2[0];
    }
    return Array.isArray(res[0]) ? res[0][0] : res[0];
}
exports.nearestString = nearestString;
