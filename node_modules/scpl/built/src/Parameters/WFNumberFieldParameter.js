"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WFParameter_1 = require("./WFParameter");
class WFNumberFieldParameter extends WFParameter_1.WFParameter {
    constructor(data, name = "Number", docs = "https://pfgithub.github.io/shortcutslang/gettingstarted#number-field") {
        super(data, name, docs);
    }
    genDocsArgName() {
        return this.allowsVariables ? `number` : `(number | variable)`;
    }
    genDocs() {
        return `${super.genDocs()}

		Accepts a number ${this.allowsVariables
            ? `
		or variable`
            : ""}
		with a number.`;
    }
    genDocsDefaultValue(value) {
        return `\`${value}\``;
    }
    build(cc, parse) {
        if (parse.canBeVariable(cc)) {
            const res = parse.asVariable(cc);
            if (!this.allowsVariables) {
                throw parse.error(cc, "This number field does not acccept variables.");
            }
            return res;
        }
        else if (parse.canBeNumber(cc)) {
            const num = parse.asNumber(cc); // asString returns a string like "" <-- that's a string
            return num;
        }
        throw parse.error(cc, "Number fields only accept numbers and variables.");
    }
}
exports.WFNumberFieldParameter = WFNumberFieldParameter;
